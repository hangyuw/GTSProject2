{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "project2-ADF"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/business_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "yelp_academic_dataset_business.json",
						"container": "source-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"business_id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"address": {
							"type": "string"
						},
						"city": {
							"type": "string"
						},
						"state": {
							"type": "string"
						},
						"postal_code": {
							"type": "string"
						},
						"latitude": {
							"type": "number"
						},
						"longitude": {
							"type": "number"
						},
						"stars": {
							"type": "number"
						},
						"review_count": {
							"type": "integer"
						},
						"is_open": {
							"type": "integer"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"ByAppointmentOnly": {
									"type": "string"
								},
								"BusinessAcceptsCreditCards": {
									"type": "string"
								},
								"BikeParking": {
									"type": "string"
								},
								"RestaurantsPriceRange2": {
									"type": "string"
								},
								"CoatCheck": {
									"type": "string"
								},
								"RestaurantsTakeOut": {
									"type": "string"
								},
								"RestaurantsDelivery": {
									"type": "string"
								},
								"Caters": {
									"type": "string"
								},
								"WiFi": {
									"type": "string"
								},
								"BusinessParking": {
									"type": "string"
								},
								"WheelchairAccessible": {
									"type": "string"
								},
								"HappyHour": {
									"type": "string"
								},
								"OutdoorSeating": {
									"type": "string"
								},
								"HasTV": {
									"type": "string"
								},
								"RestaurantsReservations": {
									"type": "string"
								},
								"DogsAllowed": {
									"type": "string"
								},
								"Alcohol": {
									"type": "string"
								},
								"GoodForKids": {
									"type": "string"
								},
								"RestaurantsAttire": {
									"type": "string"
								},
								"Ambience": {
									"type": "string"
								},
								"RestaurantsTableService": {
									"type": "string"
								},
								"RestaurantsGoodForGroups": {
									"type": "string"
								},
								"DriveThru": {
									"type": "string"
								},
								"NoiseLevel": {
									"type": "string"
								}
							}
						},
						"categories": {
							"type": "string"
						},
						"hours": {
							"type": "object",
							"properties": {
								"Monday": {
									"type": "string"
								},
								"Tuesday": {
									"type": "string"
								},
								"Wednesday": {
									"type": "string"
								},
								"Thursday": {
									"type": "string"
								},
								"Friday": {
									"type": "string"
								},
								"Saturday": {
									"type": "string"
								},
								"Sunday": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/checkin_jason')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "yelp_academic_dataset_checkin.json",
						"container": "source-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"business_id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flatterned_user_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sink-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/review_jason')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "yelp_academic_dataset_review.json",
						"container": "source-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"review_id": {
							"type": "string"
						},
						"user_id": {
							"type": "string"
						},
						"business_id": {
							"type": "string"
						},
						"stars": {
							"type": "number"
						},
						"useful": {
							"type": "integer"
						},
						"funny": {
							"type": "integer"
						},
						"cool": {
							"type": "integer"
						},
						"text": {
							"type": "string"
						},
						"date": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tip_jason')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "yelp_academic_dataset_tip.json",
						"container": "source-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"user_id": {
							"type": "string"
						},
						"business_id": {
							"type": "string"
						},
						"text": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"compliment_count": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/user_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "yelp_academic_dataset_user.json",
						"container": "source-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"user_id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"review_count": {
							"type": "integer"
						},
						"yelping_since": {
							"type": "string"
						},
						"useful": {
							"type": "integer"
						},
						"funny": {
							"type": "integer"
						},
						"cool": {
							"type": "integer"
						},
						"elite": {
							"type": "string"
						},
						"friends": {
							"type": "string"
						},
						"fans": {
							"type": "integer"
						},
						"average_stars": {
							"type": "number"
						},
						"compliment_hot": {
							"type": "integer"
						},
						"compliment_more": {
							"type": "integer"
						},
						"compliment_profile": {
							"type": "integer"
						},
						"compliment_cute": {
							"type": "integer"
						},
						"compliment_list": {
							"type": "integer"
						},
						"compliment_note": {
							"type": "integer"
						},
						"compliment_plain": {
							"type": "integer"
						},
						"compliment_cool": {
							"type": "integer"
						},
						"compliment_funny": {
							"type": "integer"
						},
						"compliment_writer": {
							"type": "integer"
						},
						"compliment_photos": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flatterned_business_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sink-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flatterned_checkin_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sink-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flatterned_review_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sink-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flatterned_tip_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink_Data"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sink-data"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "business_json",
								"type": "DatasetReference"
							},
							"name": "business"
						},
						{
							"dataset": {
								"referenceName": "checkin_jason",
								"type": "DatasetReference"
							},
							"name": "checkin"
						},
						{
							"dataset": {
								"referenceName": "review_jason",
								"type": "DatasetReference"
							},
							"name": "review"
						},
						{
							"dataset": {
								"referenceName": "tip_jason",
								"type": "DatasetReference"
							},
							"name": "tip"
						},
						{
							"dataset": {
								"referenceName": "user_json",
								"type": "DatasetReference"
							},
							"name": "user"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "flatterned_user_json",
								"type": "DatasetReference"
							},
							"name": "UserSink",
							"description": "Export data to flatterned_user_json"
						},
						{
							"dataset": {
								"referenceName": "flatterned_business_json",
								"type": "DatasetReference"
							},
							"name": "BusinessSink",
							"description": "flatterned_business_json"
						},
						{
							"dataset": {
								"referenceName": "flatterned_checkin_json",
								"type": "DatasetReference"
							},
							"name": "CheckinSink",
							"description": "flatterned_checkin_json"
						},
						{
							"dataset": {
								"referenceName": "flatterned_review_json",
								"type": "DatasetReference"
							},
							"name": "ReviewSink",
							"description": "flatterned review json"
						},
						{
							"dataset": {
								"referenceName": "flatterned_tip_json",
								"type": "DatasetReference"
							},
							"name": "TipSink",
							"description": "flatterned tip json"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						},
						{
							"name": "flatten2"
						},
						{
							"name": "flatten3"
						},
						{
							"name": "flatten4"
						},
						{
							"name": "flatten5"
						}
					],
					"scriptLines": [
						"source(output(",
						"          business_id as string,",
						"          name as string,",
						"          address as string,",
						"          city as string,",
						"          state as string,",
						"          postal_code as string,",
						"          latitude as double,",
						"          longitude as double,",
						"          stars as double,",
						"          review_count as integer,",
						"          is_open as integer,",
						"          attributes as (ByAppointmentOnly as string, BusinessAcceptsCreditCards as string, BikeParking as string, RestaurantsPriceRange2 as string, CoatCheck as string, RestaurantsTakeOut as string, RestaurantsDelivery as string, Caters as string, WiFi as string, BusinessParking as string, WheelchairAccessible as string, HappyHour as string, OutdoorSeating as string, HasTV as string, RestaurantsReservations as string, DogsAllowed as string, Alcohol as string, GoodForKids as string, RestaurantsAttire as string, Ambience as string, RestaurantsTableService as string, RestaurantsGoodForGroups as string, DriveThru as string, NoiseLevel as string),",
						"          categories as string,",
						"          hours as (Monday as string, Tuesday as string, Wednesday as string, Thursday as string, Friday as string, Saturday as string, Sunday as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> business",
						"source(output(",
						"          business_id as string,",
						"          date as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> checkin",
						"source(output(",
						"          review_id as string,",
						"          user_id as string,",
						"          business_id as string,",
						"          stars as double,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          text as string,",
						"          date as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> review",
						"source(output(",
						"          user_id as string,",
						"          business_id as string,",
						"          text as string,",
						"          date as date,",
						"          compliment_count as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> tip",
						"source(output(",
						"          user_id as string,",
						"          name as string,",
						"          review_count as integer,",
						"          yelping_since as string,",
						"          useful as integer,",
						"          funny as integer,",
						"          cool as integer,",
						"          elite as string,",
						"          friends as string,",
						"          fans as integer,",
						"          average_stars as double,",
						"          compliment_hot as integer,",
						"          compliment_more as integer,",
						"          compliment_profile as integer,",
						"          compliment_cute as integer,",
						"          compliment_list as integer,",
						"          compliment_note as integer,",
						"          compliment_plain as integer,",
						"          compliment_cool as integer,",
						"          compliment_funny as integer,",
						"          compliment_writer as integer,",
						"          compliment_photos as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> user",
						"business foldDown(unroll(),",
						"     mapColumn(",
						"          business_id,",
						"          name,",
						"          address,",
						"          city,",
						"          state,",
						"          postal_code,",
						"          latitude,",
						"          longitude,",
						"          stars,",
						"          review_count,",
						"          is_open,",
						"          attributes,",
						"          categories,",
						"          hours",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"checkin foldDown(unroll(),",
						"     mapColumn(",
						"          business_id,",
						"          date",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten2",
						"review foldDown(unroll(),",
						"     mapColumn(",
						"          review_id,",
						"          user_id,",
						"          business_id,",
						"          stars,",
						"          useful,",
						"          funny,",
						"          cool,",
						"          text,",
						"          date",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten3",
						"tip foldDown(unroll(),",
						"     mapColumn(",
						"          user_id,",
						"          business_id,",
						"          text,",
						"          date,",
						"          compliment_count",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten4",
						"user foldDown(unroll(),",
						"     mapColumn(",
						"          user_id,",
						"          name,",
						"          review_count,",
						"          yelping_since,",
						"          useful,",
						"          funny,",
						"          cool,",
						"          elite,",
						"          friends,",
						"          fans,",
						"          average_stars,",
						"          compliment_hot,",
						"          compliment_more,",
						"          compliment_profile,",
						"          compliment_cute,",
						"          compliment_list,",
						"          compliment_note,",
						"          compliment_plain,",
						"          compliment_cool,",
						"          compliment_funny,",
						"          compliment_writer,",
						"          compliment_photos",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten5",
						"flatten5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> UserSink",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BusinessSink",
						"flatten2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CheckinSink",
						"flatten3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ReviewSink",
						"flatten4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> TipSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/business_json')]",
				"[concat(variables('factoryId'), '/datasets/checkin_jason')]",
				"[concat(variables('factoryId'), '/datasets/review_jason')]",
				"[concat(variables('factoryId'), '/datasets/tip_jason')]",
				"[concat(variables('factoryId'), '/datasets/user_json')]",
				"[concat(variables('factoryId'), '/datasets/flatterned_user_json')]",
				"[concat(variables('factoryId'), '/datasets/flatterned_business_json')]",
				"[concat(variables('factoryId'), '/datasets/flatterned_checkin_json')]",
				"[concat(variables('factoryId'), '/datasets/flatterned_review_json')]",
				"[concat(variables('factoryId'), '/datasets/flatterned_tip_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Flattern Raw data",
						"description": "Flattern Raw data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"business": {},
									"checkin": {},
									"review": {},
									"tip": {},
									"user": {},
									"UserSink": {},
									"BusinessSink": {},
									"CheckinSink": {},
									"ReviewSink": {},
									"TipSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}