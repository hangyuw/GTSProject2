{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "output_business_json",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100) ~> source1",
				"derivedColumn1 foldDown(unroll(),",
				"     mapColumn(",
				"          business_id,",
				"          name,",
				"          address,",
				"          city,",
				"          state,",
				"          postal_code,",
				"          latitude,",
				"          longitude,",
				"          stars,",
				"          review_count,",
				"          is_open,",
				"          attributes = {attributes.ByappointmentOnly},",
				"          categories,",
				"          hours = {attributes.ByappointmentOnly}",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"source1 derive({attributes.ByappointmentOnly} = coalesce(attributes.ByAppointmentOnly, 'Default_Value'),",
				"          {attributes.BusinessAcceptsCreditCards} = coalesce(attributes.BusinessAcceptsCreditCards, 'Default_Value'),",
				"          {hours.Monday} = coalesce(hours.Monday, 'Default_Value'),",
				"          {hours.Tuesday} = coalesce(hours.Tuesday, 'Default_Value'),",
				"          {hours.Wednesday} = coalesce(hours.Wednesday, 'Default_Value'),",
				"          {hours.Thursday} = coalesce(hours.Thursday, 'Default_Value'),",
				"          {hours.Friday} = coalesce(hours.Friday, 'Default_Value'),",
				"          {hours.Saturday} = coalesce(hours.Saturday, 'Default_Value'),",
				"          attributes = isDelete(1),",
				"          hours = isDelete(1)) ~> derivedColumn1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}